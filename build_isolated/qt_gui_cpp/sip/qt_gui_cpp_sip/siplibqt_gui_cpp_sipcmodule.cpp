/*
 * Module code.
 *
 * Generated by SIP 4.17
 */

#include "sipAPIlibqt_gui_cpp_sip.h"

#line 29 "/usr/share/sip/PyQt4/QtCore/qobject.sip"
#include <qobject.h>
#line 12 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 8 "plugin.sip"
#include <qt_gui_cpp/plugin.h>
#line 15 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 31 "/usr/share/sip/PyQt4/QtCore/qstring.sip"
#include <qstring.h>
#line 18 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 7 "plugin_context.sip"
#include <qt_gui_cpp/plugin_context.h>
#line 21 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 115 "/usr/share/sip/PyQt4/QtCore/qlist.sip"
#include <qlist.h>
#line 24 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 7 "plugin_descriptor.sip"
#include <qt_gui_cpp/plugin_descriptor.h>
#line 27 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 28 "/usr/share/sip/PyQt4/QtCore/qmap.sip"
#include <qmap.h>
#line 30 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 72 "/usr/share/sip/PyQt4/QtCore/qstring.sip"
#include <qstring.h>
#line 33 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 7 "plugin_provider.sip"
#include <qt_gui_cpp/plugin_provider.h>
#line 36 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 115 "/usr/share/sip/PyQt4/QtCore/qlist.sip"
#include <qlist.h>
#line 39 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 8 "composite_plugin_provider.sip"
#include <qt_gui_cpp/composite_plugin_provider.h>
#line 42 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"
#line 7 "generic_proxy.sip"
#include <qt_gui_cpp/generic_proxy.h>
#line 45 "/opt/ros_catkin_ws/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_libqt_gui_cpp_sip[] = {
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'R', 'o', 's', 'P', 'l', 'u', 'g', 'i', 'n', 'l', 'i', 'b', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', '_', 'F', 'o', 'r', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 's', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'R', 'o', 's', 'P', 'l', 'u', 'g', 'i', 'n', 'l', 'i', 'b', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', '_', 'F', 'o', 'r', 'P', 'l', 'u', 'g', 'i', 'n', 's', 0,
    'Q', 'L', 'i', 's', 't', '<', 'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', '*', '>', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'R', 'e', 'c', 'u', 'r', 's', 'i', 'v', 'e', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'C', 'o', 'm', 'p', 'o', 's', 'i', 't', 'e', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'Q', 'L', 'i', 's', 't', '<', 'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', '*', '>', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 'B', 'r', 'i', 'd', 'g', 'e', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'G', 'e', 'n', 'e', 'r', 'i', 'c', 'P', 'r', 'o', 'x', 'y', 0,
    'Q', 'M', 'a', 'p', '<', 'Q', 'S', 't', 'r', 'i', 'n', 'g', ',', 'Q', 'S', 't', 'r', 'i', 'n', 'g', '>', 0,
    't', 'r', 'i', 'g', 'g', 'e', 'r', '_', 'c', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'S', 'e', 't', 't', 'i', 'n', 'g', 's', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', '_', 'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'o', 'r', 's', 0,
    's', 'e', 't', '_', 'p', 'l', 'u', 'g', 'i', 'n', '_', 'p', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 's', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'l', 'o', 'a', 'd', '_', 'e', 'x', 'p', 'l', 'i', 'c', 'i', 't', '_', 't', 'y', 'p', 'e', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', ':', ':', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    'e', 's', 'c', 'a', 'p', 'e', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'h', 'a', 's', '_', 'c', 'o', 'n', 'f', 'i', 'g', 'u', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'S', 'u', 'b', 'W', 'i', 'n', 'd', 'o', 'w', 's', 0,
    's', 'e', 'n', 'd', 'e', 'r', 'S', 'i', 'g', 'n', 'a', 'l', 'I', 'n', 'd', 'e', 'x', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'l', 'i', 'b', 'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', '_', 's', 'i', 'p', 0,
    'r', 'e', 's', 't', 'o', 'r', 'e', '_', 's', 'e', 't', 't', 'i', 'n', 'g', 's', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'O', 'l', 'd', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'c', 'r', 'e', 'a', 't', 'e', '_', 'i', 'n', 's', 't', 'a', 'n', 'c', 'e', 0,
    's', 'h', 'u', 't', 'd', 'o', 'w', 'n', '_', 'p', 'l', 'u', 'g', 'i', 'n', 0,
    'a', 's', 'p', 'e', 'c', 't', 'R', 'a', 't', 'i', 'o', 'M', 'o', 'd', 'e', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    's', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'a', 'v', 'e', '_', 's', 'e', 't', 't', 'i', 'n', 'g', 's', 0,
    'u', 'n', 'l', 'o', 'a', 'd', '_', 'p', 'l', 'u', 'g', 'i', 'n', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'd', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'd', 'e', 's', 't', 'r', 'o', 'y', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'o', 'd', 'e', 0,
    't', 'h', 'r', 'e', 's', 'h', 'o', 'l', 'd', 'T', 'i', 'm', 'e', 0,
    'r', 'e', 'l', 'o', 'a', 'd', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    't', 'a', 'r', 'g', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'W', 'i', 'd', 'g', 'e', 't', 0,
    's', 'e', 'r', 'i', 'a', 'l', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'b', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'm', 'i', 'd', 'L', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'l', 'o', 's', 'e', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 'T', 'e', 'x', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 'T', 'e', 'x', 't', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'q', 't', '_', 'g', 'u', 'i', '_', 'c', 'p', 'p', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'S', 'p', 'a', 'n', 0,
    'c', 'o', 'n', 's', 't', 'r', 'a', 'i', 'n', 't', 0,
    'r', 'e', 'p', 'e', 'a', 't', 'T', 'i', 'm', 'e', 0,
    'f', 'i', 'e', 'l', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'o', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'l', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'a', 'd', 'd', 'W', 'i', 'd', 'g', 'e', 't', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'r', 'e', 'c', 'e', 'i', 'v', 'e', 'r', 's', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'd', 'i', 's', 'c', 'o', 'v', 'e', 'r', 0,
    's', 'h', 'u', 't', 'd', 'o', 'w', 'n', 0,
    'f', 'i', 'l', 'l', 'R', 'u', 'l', 'e', 0,
    't', 'a', 'b', 'A', 'r', 'r', 'a', 'y', 0,
    't', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    'u', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    's', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    'b', 'e', 'h', 'a', 'v', 'i', 'o', 'r', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'f', 'i', 'l', 'l', 'C', 'h', 'a', 'r', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'e', 'x', 'p', 'o', 's', 'e', 'd', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'y', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'x', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'r', 'o', 'w', 'S', 'p', 'a', 'n', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    'y', 'R', 'o', 'u', 'n', 'd', 0,
    'x', 'R', 'o', 'u', 'n', 'd', 0,
    'l', 'a', 'y', 'e', 'r', 's', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'u', 'n', 'k', 'e', 'n', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    'w', 'i', 'd', 'g', 'e', 't', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    's', 'e', 'n', 'd', 'e', 'r', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'y', 's', 't', 'e', 'm', 0,
    'u', 'n', 'l', 'o', 'a', 'd', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'a', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    'b', 'r', 'u', 's', 'h', 0,
    'h', 'i', 'n', 't', 's', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'm', 's', 'e', 'c', 's', 0,
    's', 't', 'a', 't', 'e', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'a', 'r', 'g', 'v', 0,
    'b', 'a', 's', 'e', 0,
    'f', 'i', 'l', 'l', 0,
    'f', 'r', 'o', 'm', 0,
    's', 'o', 'r', 't', 0,
    'p', 'e', 'n', 0,
    'e', 'n', 'd', 0,
    'p', 'o', 's', 0,
    's', 'w', 0,
    's', 'y', 0,
    's', 'x', 0,
};

void sipVH_libqt_gui_cpp_sip_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, void*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "V",a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

qt_gui_cpp::Plugin* sipVH_libqt_gui_cpp_sip_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,qt_gui_cpp::PluginContext*a1)
{
    qt_gui_cpp::Plugin* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "ND",new QString(a0),sipType_QString,NULL,a1,sipType_qt_gui_cpp_PluginContext,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_qt_gui_cpp_Plugin, &sipRes);

    return sipRes;
}

void* sipVH_libqt_gui_cpp_sip_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,qt_gui_cpp::PluginContext*a1)
{
    void* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "ND",new QString(a0),sipType_QString,NULL,a1,sipType_qt_gui_cpp_PluginContext,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "V", &sipRes);

    return sipRes;
}

QList<qt_gui_cpp::PluginDescriptor*> sipVH_libqt_gui_cpp_sip_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QObject*a0)
{
    QList<qt_gui_cpp::PluginDescriptor*> sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QObject,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QList_0101qt_gui_cpp_PluginDescriptor, &sipRes);

    return sipRes;
}

QMap<QString,QString> sipVH_libqt_gui_cpp_sip_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QObject*a0)
{
    QMap<QString,QString> sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QObject,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QMap_0100QString_0100QString, &sipRes);

    return sipRes;
}

qt_gui_cpp::PluginProvider* sipVH_libqt_gui_cpp_sip_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,qt_gui_cpp::PluginContext*a1)
{
    qt_gui_cpp::PluginProvider* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "ND",new QString(a0),sipType_QString,NULL,a1,sipType_qt_gui_cpp_PluginContext,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_qt_gui_cpp_PluginProvider, &sipRes);

    return sipRes;
}

void sipVH_libqt_gui_cpp_sip_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, qt_gui_cpp::Plugin*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_qt_gui_cpp_Plugin,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_libqt_gui_cpp_sip_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QObject*a0,QObject*a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DD",a0,sipType_QObject,NULL,a1,sipType_QObject,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

bool sipVH_libqt_gui_cpp_sip_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, qt_gui_cpp::PluginProvider*a0,const QString& a1,qt_gui_cpp::PluginContext*a2)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DND",a0,sipType_qt_gui_cpp_PluginProvider,NULL,new QString(a1),sipType_QString,NULL,a2,sipType_qt_gui_cpp_PluginContext,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_libqt_gui_cpp_sip_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QList<qt_gui_cpp::PluginProvider*>& a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N",new QList<qt_gui_cpp::PluginProvider*>(a0),sipType_QList_0101qt_gui_cpp_PluginProvider,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_libqt_gui_cpp_sip_QList_0101qt_gui_cpp_PluginDescriptor.mtd_base,
    &sipTypeDef_libqt_gui_cpp_sip_QList_0101qt_gui_cpp_PluginProvider.mtd_base,
    &sipTypeDef_libqt_gui_cpp_sip_QMap_0100QString_0100QString.mtd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_CompositePluginProvider.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_GenericProxy.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_Plugin.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_PluginBridge.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_PluginContext.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_PluginDescriptor.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_PluginProvider.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_RecursivePluginProvider.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_RosPluginlibPluginProvider_ForPluginProviders.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_RosPluginlibPluginProvider_ForPlugins.super.ctd_base,
    &sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_Settings.super.ctd_base,
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_0,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_1,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_2,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_3,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_4,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_5,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_6,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_7,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_8,
    (sipVirtHandlerFunc)sipVH_libqt_gui_cpp_sip_9,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", 1, NULL},
    {"PyQt4.QtGui", -1, NULL},
    {NULL, -1, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_libqt_gui_cpp_sip = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_libqt_gui_cpp_sip,
    0,
    1,
    sipStrings_libqt_gui_cpp_sip,
    importsTable,
    NULL,
    15,
    typesTable,
    NULL,
    0,
    NULL,
    0,
    NULL,
    virtHandlersTable,
    NULL,
    NULL,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_libqt_gui_cpp_sip;
const sipExportedModuleDef *sipModuleAPI_libqt_gui_cpp_sip_QtCore;
const sipExportedModuleDef *sipModuleAPI_libqt_gui_cpp_sip_QtGui;

sip_qt_metaobject_func sip_libqt_gui_cpp_sip_qt_metaobject;
sip_qt_metacall_func sip_libqt_gui_cpp_sip_qt_metacall;
sip_qt_metacast_func sip_libqt_gui_cpp_sip_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_libqt_gui_cpp_sip
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initlibqt_gui_cpp_sip
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "libqt_gui_cpp_sip",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_libqt_gui_cpp_sip, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_libqt_gui_cpp_sip), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_libqt_gui_cpp_sip = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_libqt_gui_cpp_sip = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_libqt_gui_cpp_sip == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_libqt_gui_cpp_sip,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_libqt_gui_cpp_sip_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_libqt_gui_cpp_sip_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_libqt_gui_cpp_sip_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_libqt_gui_cpp_sip_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_libqt_gui_cpp_sip,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_libqt_gui_cpp_sip_QtCore = sipModuleAPI_libqt_gui_cpp_sip.em_imports[0].im_module;
    sipModuleAPI_libqt_gui_cpp_sip_QtGui = sipModuleAPI_libqt_gui_cpp_sip.em_imports[1].im_module;

    SIP_MODULE_RETURN(sipModule);
}

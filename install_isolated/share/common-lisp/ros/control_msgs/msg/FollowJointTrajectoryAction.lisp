; Auto-generated. Do not edit!


(cl:in-package control_msgs-msg)


;//! \htmlinclude FollowJointTrajectoryAction.msg.html

(cl:defclass <FollowJointTrajectoryAction> (roslisp-msg-protocol:ros-message)
  ((action_goal
    :reader action_goal
    :initarg :action_goal
    :type control_msgs-msg:FollowJointTrajectoryActionGoal
    :initform (cl:make-instance 'control_msgs-msg:FollowJointTrajectoryActionGoal))
   (action_result
    :reader action_result
    :initarg :action_result
    :type control_msgs-msg:FollowJointTrajectoryActionResult
    :initform (cl:make-instance 'control_msgs-msg:FollowJointTrajectoryActionResult))
   (action_feedback
    :reader action_feedback
    :initarg :action_feedback
    :type control_msgs-msg:FollowJointTrajectoryActionFeedback
    :initform (cl:make-instance 'control_msgs-msg:FollowJointTrajectoryActionFeedback)))
)

(cl:defclass FollowJointTrajectoryAction (<FollowJointTrajectoryAction>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <FollowJointTrajectoryAction>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'FollowJointTrajectoryAction)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name control_msgs-msg:<FollowJointTrajectoryAction> is deprecated: use control_msgs-msg:FollowJointTrajectoryAction instead.")))

(cl:ensure-generic-function 'action_goal-val :lambda-list '(m))
(cl:defmethod action_goal-val ((m <FollowJointTrajectoryAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader control_msgs-msg:action_goal-val is deprecated.  Use control_msgs-msg:action_goal instead.")
  (action_goal m))

(cl:ensure-generic-function 'action_result-val :lambda-list '(m))
(cl:defmethod action_result-val ((m <FollowJointTrajectoryAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader control_msgs-msg:action_result-val is deprecated.  Use control_msgs-msg:action_result instead.")
  (action_result m))

(cl:ensure-generic-function 'action_feedback-val :lambda-list '(m))
(cl:defmethod action_feedback-val ((m <FollowJointTrajectoryAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader control_msgs-msg:action_feedback-val is deprecated.  Use control_msgs-msg:action_feedback instead.")
  (action_feedback m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <FollowJointTrajectoryAction>) ostream)
  "Serializes a message object of type '<FollowJointTrajectoryAction>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_goal) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_result) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_feedback) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <FollowJointTrajectoryAction>) istream)
  "Deserializes a message object of type '<FollowJointTrajectoryAction>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_goal) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_result) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_feedback) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<FollowJointTrajectoryAction>)))
  "Returns string type for a message object of type '<FollowJointTrajectoryAction>"
  "control_msgs/FollowJointTrajectoryAction")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'FollowJointTrajectoryAction)))
  "Returns string type for a message object of type 'FollowJointTrajectoryAction"
  "control_msgs/FollowJointTrajectoryAction")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<FollowJointTrajectoryAction>)))
  "Returns md5sum for a message object of type '<FollowJointTrajectoryAction>"
  "bc4f9b743838566551c0390c65f1a248")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'FollowJointTrajectoryAction)))
  "Returns md5sum for a message object of type 'FollowJointTrajectoryAction"
  "bc4f9b743838566551c0390c65f1a248")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<FollowJointTrajectoryAction>)))
  "Returns full string definition for message of type '<FollowJointTrajectoryAction>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%FollowJointTrajectoryActionGoal action_goal~%FollowJointTrajectoryActionResult action_result~%FollowJointTrajectoryActionFeedback action_feedback~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FollowJointTrajectoryGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# The joint trajectory to follow~%trajectory_msgs/JointTrajectory trajectory~%~%# Tolerances for the trajectory.  If the measured joint values fall~%# outside the tolerances the trajectory goal is aborted.  Any~%# tolerances that are not specified (by being omitted or set to 0) are~%# set to the defaults for the action server (often taken from the~%# parameter server).~%~%# Tolerances applied to the joints as the trajectory is executed.  If~%# violated, the goal aborts with error_code set to~%# PATH_TOLERANCE_VIOLATED.~%JointTolerance[] path_tolerance~%~%# To report success, the joints must be within goal_tolerance of the~%# final trajectory value.  The goal must be achieved by time the~%# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance~%# allows some leeway in time, so that the trajectory goal can still~%# succeed even if the joints reach the goal some time after the~%# precise end time of the trajectory).~%#~%# If the joints are not within goal_tolerance after \"trajectory finish~%# time\" + goal_time_tolerance, the goal aborts with error_code set to~%# GOAL_TOLERANCE_VIOLATED~%JointTolerance[] goal_tolerance~%duration goal_time_tolerance~%~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%================================================================================~%MSG: control_msgs/JointTolerance~%# The tolerances specify the amount the position, velocity, and~%# accelerations can vary from the setpoints.  For example, in the case~%# of trajectory control, when the actual position varies beyond~%# (desired position + position tolerance), the trajectory goal may~%# abort.~%# ~%# There are two special values for tolerances:~%#  * 0 - The tolerance is unspecified and will remain at whatever the default is~%#  * -1 - The tolerance is \"erased\".  If there was a default, the joint will be~%#         allowed to move without restriction.~%~%string name~%float64 position  # in radians or meters (for a revolute or prismatic joint, respectively)~%float64 velocity  # in rad/sec or m/sec~%float64 acceleration  # in rad/sec^2 or m/sec^2~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FollowJointTrajectoryResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%int32 error_code~%int32 SUCCESSFUL = 0~%int32 INVALID_GOAL = -1~%int32 INVALID_JOINTS = -2~%int32 OLD_HEADER_TIMESTAMP = -3~%int32 PATH_TOLERANCE_VIOLATED = -4~%int32 GOAL_TOLERANCE_VIOLATED = -5~%~%# Human readable description of the error code. Contains complementary~%# information that is especially useful when execution fails, for instance:~%# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested~%#   trajectory is in the past).~%# - INVALID_JOINTS: The mismatch between the expected controller joints~%#   and those provided in the goal.~%# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint~%#   violated which tolerance, and by how much.~%string error_string~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FollowJointTrajectoryFeedback feedback~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%Header header~%string[] joint_names~%trajectory_msgs/JointTrajectoryPoint desired~%trajectory_msgs/JointTrajectoryPoint actual~%trajectory_msgs/JointTrajectoryPoint error~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'FollowJointTrajectoryAction)))
  "Returns full string definition for message of type 'FollowJointTrajectoryAction"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%FollowJointTrajectoryActionGoal action_goal~%FollowJointTrajectoryActionResult action_result~%FollowJointTrajectoryActionFeedback action_feedback~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%FollowJointTrajectoryGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# The joint trajectory to follow~%trajectory_msgs/JointTrajectory trajectory~%~%# Tolerances for the trajectory.  If the measured joint values fall~%# outside the tolerances the trajectory goal is aborted.  Any~%# tolerances that are not specified (by being omitted or set to 0) are~%# set to the defaults for the action server (often taken from the~%# parameter server).~%~%# Tolerances applied to the joints as the trajectory is executed.  If~%# violated, the goal aborts with error_code set to~%# PATH_TOLERANCE_VIOLATED.~%JointTolerance[] path_tolerance~%~%# To report success, the joints must be within goal_tolerance of the~%# final trajectory value.  The goal must be achieved by time the~%# trajectory ends plus goal_time_tolerance.  (goal_time_tolerance~%# allows some leeway in time, so that the trajectory goal can still~%# succeed even if the joints reach the goal some time after the~%# precise end time of the trajectory).~%#~%# If the joints are not within goal_tolerance after \"trajectory finish~%# time\" + goal_time_tolerance, the goal aborts with error_code set to~%# GOAL_TOLERANCE_VIOLATED~%JointTolerance[] goal_tolerance~%duration goal_time_tolerance~%~%~%================================================================================~%MSG: trajectory_msgs/JointTrajectory~%Header header~%string[] joint_names~%JointTrajectoryPoint[] points~%================================================================================~%MSG: trajectory_msgs/JointTrajectoryPoint~%# Each trajectory point specifies either positions[, velocities[, accelerations]]~%# or positions[, effort] for the trajectory to be executed.~%# All specified values are in the same order as the joint names in JointTrajectory.msg~%~%float64[] positions~%float64[] velocities~%float64[] accelerations~%float64[] effort~%duration time_from_start~%~%================================================================================~%MSG: control_msgs/JointTolerance~%# The tolerances specify the amount the position, velocity, and~%# accelerations can vary from the setpoints.  For example, in the case~%# of trajectory control, when the actual position varies beyond~%# (desired position + position tolerance), the trajectory goal may~%# abort.~%# ~%# There are two special values for tolerances:~%#  * 0 - The tolerance is unspecified and will remain at whatever the default is~%#  * -1 - The tolerance is \"erased\".  If there was a default, the joint will be~%#         allowed to move without restriction.~%~%string name~%float64 position  # in radians or meters (for a revolute or prismatic joint, respectively)~%float64 velocity  # in rad/sec or m/sec~%float64 acceleration  # in rad/sec^2 or m/sec^2~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FollowJointTrajectoryResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%int32 error_code~%int32 SUCCESSFUL = 0~%int32 INVALID_GOAL = -1~%int32 INVALID_JOINTS = -2~%int32 OLD_HEADER_TIMESTAMP = -3~%int32 PATH_TOLERANCE_VIOLATED = -4~%int32 GOAL_TOLERANCE_VIOLATED = -5~%~%# Human readable description of the error code. Contains complementary~%# information that is especially useful when execution fails, for instance:~%# - INVALID_GOAL: The reason for the invalid goal (e.g., the requested~%#   trajectory is in the past).~%# - INVALID_JOINTS: The mismatch between the expected controller joints~%#   and those provided in the goal.~%# - PATH_TOLERANCE_VIOLATED and GOAL_TOLERANCE_VIOLATED: Which joint~%#   violated which tolerance, and by how much.~%string error_string~%~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%FollowJointTrajectoryFeedback feedback~%~%================================================================================~%MSG: control_msgs/FollowJointTrajectoryFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%Header header~%string[] joint_names~%trajectory_msgs/JointTrajectoryPoint desired~%trajectory_msgs/JointTrajectoryPoint actual~%trajectory_msgs/JointTrajectoryPoint error~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <FollowJointTrajectoryAction>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_goal))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_result))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_feedback))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <FollowJointTrajectoryAction>))
  "Converts a ROS message object to a list"
  (cl:list 'FollowJointTrajectoryAction
    (cl:cons ':action_goal (action_goal msg))
    (cl:cons ':action_result (action_result msg))
    (cl:cons ':action_feedback (action_feedback msg))
))

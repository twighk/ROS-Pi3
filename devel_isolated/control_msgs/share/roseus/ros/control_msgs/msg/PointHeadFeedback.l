;; Auto-generated. Do not edit!


(when (boundp 'control_msgs::PointHeadFeedback)
  (if (not (find-package "CONTROL_MSGS"))
    (make-package "CONTROL_MSGS"))
  (shadow 'PointHeadFeedback (find-package "CONTROL_MSGS")))
(unless (find-package "CONTROL_MSGS::POINTHEADFEEDBACK")
  (make-package "CONTROL_MSGS::POINTHEADFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude PointHeadFeedback.msg.html


(defclass control_msgs::PointHeadFeedback
  :super ros::object
  :slots (_pointing_angle_error ))

(defmethod control_msgs::PointHeadFeedback
  (:init
   (&key
    ((:pointing_angle_error __pointing_angle_error) 0.0)
    )
   (send-super :init)
   (setq _pointing_angle_error (float __pointing_angle_error))
   self)
  (:pointing_angle_error
   (&optional __pointing_angle_error)
   (if __pointing_angle_error (setq _pointing_angle_error __pointing_angle_error)) _pointing_angle_error)
  (:serialization-length
   ()
   (+
    ;; float64 _pointing_angle_error
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _pointing_angle_error
       (sys::poke _pointing_angle_error (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _pointing_angle_error
     (setq _pointing_angle_error (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get control_msgs::PointHeadFeedback :md5sum-) "cce80d27fd763682da8805a73316cab4")
(setf (get control_msgs::PointHeadFeedback :datatype-) "control_msgs/PointHeadFeedback")
(setf (get control_msgs::PointHeadFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float64 pointing_angle_error


")



(provide :control_msgs/PointHeadFeedback "cce80d27fd763682da8805a73316cab4")


